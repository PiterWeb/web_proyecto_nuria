---
import Button from "../../ui/button.astro";

const { action } = Astro.props;

const actionText =
  action === "login"
    ? "Iniciar sesión"
    : action === "register"
      ? "Registrarse"
      : "Enviar";
---

<form
  action="https://api.web3forms.com/submit"
  method="POST"
  id="form"
  class="needs-validation"
  novalidate>
  <input type="checkbox" class="hidden" style="display:none" name="botcheck" />
  {
    action === "register" && (
      <div class="mb-5">
        <input
          type="text"
          placeholder="Nombre de usuario"
          required
          class="w-full px-4 py-3 border-2 placeholder:text-gray-800 rounded-md outline-none focus:ring-4 border-gray-300 focus:border-gray-600 ring-gray-100"
          name="username"
        />
        <div class="empty-feedback invalid-feedback text-red-400 text-sm mt-1">
          Por favor ingrese su nombre de usuario.
        </div>
      </div>
    )
  }
  <div class="mb-5">
    <label for="email_address" class="sr-only">Correo electrónico</label><input
      id="email_address"
      type="email"
      placeholder="Correo electrónico"
      name="email"
      required
      class="w-full px-4 py-3 border-2 placeholder:text-gray-800 rounded-md outline-none focus:ring-4 border-gray-300 focus:border-gray-600 ring-gray-100"
    />
    <div class="empty-feedback text-red-400 text-sm mt-1">
      Por favor ingrese su correo electrónico.
    </div>
    <div class="invalid-feedback text-red-400 text-sm mt-1">
      Por favor ingrese un correo electrónico válido.
    </div>
  </div>
  <div class="mb-5">
    <label for="password" class="sr-only">Contraseña</label><input
      id="password"
      type="password"
      placeholder="Contraseña"
      name="password"
      required
      class="w-full px-4 py-3 border-2 placeholder:text-gray-800 rounded-md outline-none focus:ring-4 border-gray-300 focus:border-gray-600 ring-gray-100"
    />
    <div class="empty-feedback text-red-400 text-sm mt-1">
      Por favor ingrese una contraseña.
    </div>
    <div class="invalid-feedback text-red-400 text-sm mt-1">
      Por favor ingrese una contraseña válida.
    </div>
  </div>
  <Button type="submit" size="lg" block>{actionText}</Button>
  <div id="result" class="mt-3 text-center"></div>
</form>

<style>
  .invalid-feedback,
  .empty-feedback {
    display: none;
  }

  .was-validated :placeholder-shown:invalid ~ .empty-feedback {
    display: block;
  }

  .was-validated :not(:placeholder-shown):invalid ~ .invalid-feedback {
    display: block;
  }

  .is-invalid,
  .was-validated :invalid {
    border-color: #dc3545;
  }
</style>

<script>
  import { login, createAccount } from "@utils/appwrite";

  const form = document.getElementById("form");
  const result = document.getElementById("result");

  form?.addEventListener("submit", function (e) {
    e.preventDefault();
    form.classList.add("was-validated");
    //@ts-ignore
    if (!form.checkValidity()) {
      //@ts-ignore
      form.querySelectorAll(":invalid")[0].focus();
      return;
    }

    //@ts-ignore
    const formData = new FormData(form);
    const object = Object.fromEntries(formData);

    if (!result) return;

    result.innerHTML = `Redirecting...`;

    const { password, email, username } = object;

    console.log(username);

    const action = !username ? "login" : "register";

    const process =
      action === "login"
        ? login(email, password)
        : createAccount(email, password, username);

    process
      .then(() => {
        result?.classList.add("text-green-500");
      })
      .catch((error) => {
        console.log(error);

        result.innerHTML = "Ha ocurrido un error inesperado!";
      })
      .then(() => {
        //@ts-ignore
        form.reset();
        form.classList.remove("was-validated");
        setTimeout(() => {
          result.style.display = "none";
        }, 5000);
      })
      .then(() => {
        if (action === "login") {
          return window.location.href = "/espacio-personal";
        }

        login(email, password).then(() => {
          window.location.href = "/espacio-personal";
        });

      });

    // fetch("https://api.web3forms.com/submit", {
    //   method: "POST",
    //   headers: {
    //     "Content-Type": "application/json",
    //     Accept: "application/json",
    //   },
    //   body: json,
    // })
    //   .then(async (response) => {
    //     let json = await response.json();
    //     if (response.status == 200) {
    //       result.classList.add("text-green-500");
    //       result.innerHTML = json.message;
    //     } else {
    //       console.log(response);
    //       result.classList.add("text-red-500");
    //       result.innerHTML = json.message;
    //     }
    //   })
    //   .catch((error) => {
    //     console.log(error);
    //     result.innerHTML = "Something went wrong!";
    //   })
    //   .then(function () {
    //     form.reset();
    //     form.classList.remove("was-validated");
    //     setTimeout(() => {
    //       result.style.display = "none";
    //     }, 5000);
    //   });
  });
</script>
